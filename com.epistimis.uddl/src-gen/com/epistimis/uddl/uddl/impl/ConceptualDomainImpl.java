/**
 * generated by Xtext 2.33.0
 * Copyright (c) 2022 - 2024 Epistimis LLC (http://www.epistimis.com).
 */
package com.epistimis.uddl.uddl.impl;

import com.epistimis.uddl.uddl.ConceptualBasisEntity;
import com.epistimis.uddl.uddl.ConceptualDomain;
import com.epistimis.uddl.uddl.UddlPackage;

import java.util.Collection;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.util.EObjectResolvingEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Conceptual Domain</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.epistimis.uddl.uddl.impl.ConceptualDomainImpl#getBasisEntity <em>Basis Entity</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ConceptualDomainImpl extends ConceptualElementImpl implements ConceptualDomain
{
  /**
   * The cached value of the '{@link #getBasisEntity() <em>Basis Entity</em>}' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBasisEntity()
   * @generated
   * @ordered
   */
  protected EList<ConceptualBasisEntity> basisEntity;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ConceptualDomainImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return UddlPackage.Literals.CONCEPTUAL_DOMAIN;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ConceptualBasisEntity> getBasisEntity()
  {
    if (basisEntity == null)
    {
      basisEntity = new EObjectResolvingEList<ConceptualBasisEntity>(ConceptualBasisEntity.class, this, UddlPackage.CONCEPTUAL_DOMAIN__BASIS_ENTITY);
    }
    return basisEntity;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case UddlPackage.CONCEPTUAL_DOMAIN__BASIS_ENTITY:
        return getBasisEntity();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case UddlPackage.CONCEPTUAL_DOMAIN__BASIS_ENTITY:
        getBasisEntity().clear();
        getBasisEntity().addAll((Collection<? extends ConceptualBasisEntity>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case UddlPackage.CONCEPTUAL_DOMAIN__BASIS_ENTITY:
        getBasisEntity().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case UddlPackage.CONCEPTUAL_DOMAIN__BASIS_ENTITY:
        return basisEntity != null && !basisEntity.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //ConceptualDomainImpl
